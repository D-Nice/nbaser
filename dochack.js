/* Generated by the Nim Compiler v1.1.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI47065 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI204058 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI52099 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI206770 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI92448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92380 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92376 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92372 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI92205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI92283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI92281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI92227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI92565 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI92563 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI92561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI92231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI92229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI94305 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI52087 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI52095 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47045 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI71186 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI52008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI52133 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI47055 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI47014 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI47016 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI52127 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI52063 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI52065 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI52079 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI52083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI52083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI52083.node = NNI52083;
var NNI52079 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI52079.node = NNI52079;
var NNI52065 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI52065.node = NNI52065;
NTI52127.base = NTI52063;
NTI52133.base = NTI52063;
var NNI52063 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI52127, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI47016, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI47014, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI47014, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI47055, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI52133, name: "up", sons: null}]};
NTI52063.node = NNI52063;
var NNI52008 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI52008.node = NNI52008;
NTI52063.base = NTI52008;
NTI52065.base = NTI52063;
NTI52079.base = NTI52065;
NTI52083.base = NTI52079;
var NNI71186 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI47016, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI47045, name: "Field1", sons: null}]};
NTI71186.node = NNI71186;
var NNI52095 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI52095.node = NNI52095;
NTI52095.base = NTI52065;
var NNI52087 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI52087.node = NNI52087;
NTI52087.base = NTI52065;
NTI92561.base = NTI92229;
NTI92563.base = NTI92229;
NTI92565.base = NTI92229;
var NNI92227 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI92227, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI92227, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI92227, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI92227, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI92227, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI92227, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI92227, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI92227, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI92227, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI92227, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI92227, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI92227, name: "NotationNode", len: 0, sons: null}}};
NTI92227.node = NNI92227;
var NNI92283 = {kind: 2, len: 92, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI47016, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI47016, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI47016, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI47016, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI47016, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI47016, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI47016, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI47016, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI47016, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI47016, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI47016, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI47016, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI47016, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI47016, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI47016, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI47016, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI47016, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI47016, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI47016, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI47016, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI47016, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI47016, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI47016, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI47016, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI47016, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI47016, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI47016, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI47016, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI47016, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI47016, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI47016, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI47016, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI47016, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI47016, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI47016, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI47016, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI47016, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI47016, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI47016, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI47016, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI47016, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI47016, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI47016, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI47016, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI47016, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI47016, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI47016, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI47016, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI47016, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI47016, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI47016, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI47016, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI47016, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI47016, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI47016, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI47016, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI47016, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI47016, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI47016, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI47016, name: "minWidth", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI47016, name: "opacity", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI47016, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI47016, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI47016, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI47016, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI47016, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI47016, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI47016, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI47016, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI47016, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI47016, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI47016, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI47016, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI47016, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI47016, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI47016, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI47016, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI47016, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI47016, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI47016, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI47016, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI47016, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI47016, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI47016, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI47016, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI47016, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI47016, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI47016, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI47016, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI47016, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI47016, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI47045, name: "zIndex", sons: null}]};
NTI92283.node = NNI92283;
NTI92283.base = NTI52008;
NTI92281.base = NTI92283;
var NNI92231 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI92561, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI92563, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI92565, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI47016, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI92229, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI92229, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI92229, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI47016, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI92227, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI47016, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI92229, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI92229, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI47016, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI92281, name: "style", sons: null}]};
NTI92231.node = NNI92231;
var NNI92205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI92372, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI92376, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI92380, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI92384, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI92388, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI92392, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI92396, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI92400, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI92404, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI92408, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI92412, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI92416, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI92420, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI92424, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI92428, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI92432, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI92436, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI92440, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI92444, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI92448, name: "onunload", sons: null}]};
NTI92205.node = NNI92205;
NTI92205.base = NTI52008;
NTI92231.base = NTI92205;
NTI92229.base = NTI92231;
NTI94305.base = NTI92229;
NTI206770.base = NTI47016;
var NNI52099 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI52099.node = NNI52099;
NTI52099.base = NTI52065;
var NNI204058 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI47045, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI47065, name: "Field1", sons: null}]};
NTI204058.node = NNI204058;

function makeNimstrLit(c_73270) {
      var ln = c_73270.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_73270.charCodeAt(i);
  }
  return result;
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_74827, src_74828, ti_74829) {
  var result_75019 = null;

    switch (ti_74829.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(is_fat_pointer_74801(ti_74829))) {
      result_75019 = src_74828;
      }
      else {
        result_75019 = [src_74828[0], src_74828[1]];
      }
      
      break;
    case 19:
            if (dest_74827 === null || dest_74827 === undefined) {
        dest_74827 = {};
      }
      else {
        for (var key in dest_74827) { delete dest_74827[key]; }
      }
      for (var key in src_74828) { dest_74827[key] = src_74828[key]; }
      result_75019 = dest_74827;
    
      break;
    case 18:
    case 17:
      if (!((ti_74829.base == null))) {
      result_75019 = nimCopy(dest_74827, src_74828, ti_74829.base);
      }
      else {
      if ((ti_74829.kind == 17)) {
      result_75019 = (dest_74827 === null || dest_74827 === undefined) ? {m_type: ti_74829} : dest_74827;
      }
      else {
        result_75019 = (dest_74827 === null || dest_74827 === undefined) ? {} : dest_74827;
      }
      }
      nimCopyAux(result_75019, src_74828, ti_74829.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_74828 === null) {
        result_75019 = null;
      }
      else {
        if (dest_74827 === null || dest_74827 === undefined) {
          dest_74827 = new Array(src_74828.length);
        }
        else {
          dest_74827.length = src_74828.length;
        }
        result_75019 = dest_74827;
        for (var i = 0; i < src_74828.length; ++i) {
          result_75019[i] = nimCopy(result_75019[i], src_74828[i], ti_74829.base);
        }
      }
    
      break;
    case 28:
            if (src_74828 !== null) {
        result_75019 = src_74828.slice(0);
      }
    
      break;
    default: 
      result_75019 = src_74828;
      break;
    }

  return result_75019;

}

function arrayConstr(len_75086, value_75087, typ_75088) {
        var result = new Array(len_75086);
    for (var i = 0; i < len_75086; ++i) result[i] = nimCopy(null, value_75087, typ_75088);
    return result;
  

  
}

function cstrToNimstr(c_73287) {
      var ln = c_73287.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_73287.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_73287.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_73304) {
                    var Tmp5;
            var Tmp7;

  var result_73305 = null;

    var res_73378 = new_seq_73336((s_73304 != null ? s_73304.length : 0));
    var i_73380 = 0;
    var j_73382 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_73380 < (s_73304 != null ? s_73304.length : 0))) break L2;
          var c_73383 = s_73304[i_73380];
          if ((c_73383 < 128)) {
          res_73378[j_73382] = String.fromCharCode(c_73383);
          i_73380 += 1;
          }
          else {
            var helper_73406 = new_seq_73336(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_73407 = c_73383.toString(16);
                  if (((code_73407 != null ? code_73407.length : 0) == 1)) {
                  if (helper_73406 != null) { helper_73406.push("%0"); } else { helper_73406 = ["%0"]; };
                  }
                  else {
                  if (helper_73406 != null) { helper_73406.push("%"); } else { helper_73406 = ["%"]; };
                  }
                  
                  if (helper_73406 != null) { helper_73406.push(code_73407); } else { helper_73406 = [code_73407]; };
                  i_73380 += 1;
                    if (((s_73304 != null ? s_73304.length : 0) <= i_73380)) Tmp5 = true; else {                      Tmp5 = (s_73304[i_73380] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_73383 = s_73304[i_73380];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_73378[j_73382] = decodeURIComponent(helper_73406.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_73378[j_73382] = helper_73406.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_73382 += 1;
        }
    } while(false);
    if (res_73378 === null) res_73378 = [];
               if (res_73378.length < j_73382) { for (var i=res_73378.length;i<j_73382;++i) res_73378.push(null); }
               else { res_73378.length = j_73382; };
    result_73305 = res_73378.join("");

  return result_73305;

}

function raiseException(e_71618, ename_71619) {
    e_71618.name = ename_71619;
    if ((excHandler == 0)) {
    unhandledException(e_71618);
    }
    
    e_71618.trace = nimCopy(null, raw_write_stack_trace_71496(), NTI47014);
    throw e_71618;

  
}

function addInt(a_73803, b_73804) {
        var result = a_73803 + b_73804;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}

function chckIndx(i_75105, a_75106, b_75107) {
      var Tmp1;

  var result_75108 = 0;

  BeforeRet: do {
      if (!(a_75106 <= i_75105)) Tmp1 = false; else {        Tmp1 = (i_75105 <= b_75107);      }    if (Tmp1) {
    result_75108 = i_75105;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_75105, a_75106, b_75107);
    }
    
  } while (false);

  return result_75108;

}

function subInt(a_73821, b_73822) {
        var result = a_73821 - b_73822;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
var ConstSet2 = setConstr([65, 90]);

function chckRange(i_75124, a_75125, b_75126) {
      var Tmp1;

  var result_75127 = 0;

  BeforeRet: do {
      if (!(a_75125 <= i_75124)) Tmp1 = false; else {        Tmp1 = (i_75124 <= b_75126);      }    if (Tmp1) {
    result_75127 = i_75124;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_75127;

}
var ConstSet3 = setConstr(95, 32, 46);
var ConstSet4 = setConstr(95, 32, 46);

function mulInt(a_73839, b_73840) {
        var result = a_73839 * b_73840;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
var ConstSet5 = setConstr([97, 122]);
var ConstSet6 = setConstr([65, 90], [97, 122]);
var ConstSet7 = setConstr([97, 122]);
var ConstSet8 = setConstr([65, 90]);

function nimMax(a_74221, b_74222) {
    var Tmp1;

  var result_74223 = 0;

  BeforeRet: do {
    if ((b_74222 <= a_74221)) {
    Tmp1 = a_74221;
    }
    else {
    Tmp1 = b_74222;
    }
    
    result_74223 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_74223;

}

function nimMin(a_74203, b_74204) {
    var Tmp1;

  var result_74205 = 0;

  BeforeRet: do {
    if ((a_74203 <= b_74204)) {
    Tmp1 = a_74203;
    }
    else {
    Tmp1 = b_74204;
    }
    
    result_74205 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_74205;

}
var nim_program_result = 0;
var global_raise_hook_65018 = [null];
var local_raise_hook_65023 = [null];
var out_of_mem_hook_65026 = [null];
var unhandled_exception_hook_65031 = [null];
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var alternative_206519 = [null];

function is_fat_pointer_74801(ti_74803) {
  var result_74804 = false;

  BeforeRet: do {
    result_74804 = !((ConstSet1[ti_74803.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_74804;

}

function nimCopyAux(dest_74832, src_74833, n_74835) {
    switch (n_74835.kind) {
    case 0:
      break;
    case 1:
            dest_74832[n_74835.offset] = nimCopy(dest_74832[n_74835.offset], src_74833[n_74835.offset], n_74835.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_74835.sons.length; i++) {
      nimCopyAux(dest_74832, src_74833, n_74835.sons[i]);
    }
    
      break;
    case 3:
            dest_74832[n_74835.offset] = nimCopy(dest_74832[n_74835.offset], src_74833[n_74835.offset], n_74835.typ);
      for (var i = 0; i < n_74835.sons.length; ++i) {
        nimCopyAux(dest_74832, src_74833, n_74835.sons[i][1]);
      }
    
      break;
    }

  
}

function add_65043(x_65046, x_65046_Idx, y_65047) {
          if (x_65046[x_65046_Idx] === null) { x_65046[x_65046_Idx] = []; }
      var off = x_65046[x_65046_Idx].length;
      x_65046[x_65046_Idx].length += y_65047.length;
      for (var i = 0; i < y_65047.length; ++i) {
        x_65046[x_65046_Idx][off+i] = y_65047.charCodeAt(i);
      }
    

  
}

function aux_write_stack_trace_71181(f_71183) {
          var Tmp3;

  var result_71184 = [null];

    var it_71192 = f_71183;
    var i_71194 = 0;
    var total_71196 = 0;
    var temp_frames_71203 = arrayConstr(64, {Field0: null, Field1: 0}, NTI71186);
    L1: do {
        L2: while (true) {
          if (!!((it_71192 == null))) Tmp3 = false; else {            Tmp3 = (i_71194 <= 63);          }        if (!Tmp3) break L2;
          temp_frames_71203[i_71194].Field0 = it_71192.procname;
          temp_frames_71203[i_71194].Field1 = it_71192.line;
          i_71194 += 1;
          total_71196 += 1;
          it_71192 = it_71192.prev;
        }
    } while(false);
    L4: do {
        L5: while (true) {
        if (!!((it_71192 == null))) break L5;
          total_71196 += 1;
          it_71192 = it_71192.prev;
        }
    } while(false);
    result_71184[0] = nimCopy(null, [], NTI47014);
    if (!((total_71196 == i_71194))) {
    if (result_71184[0] != null) { result_71184[0] = (result_71184[0]).concat(makeNimstrLit("(")); } else { result_71184[0] = makeNimstrLit("("); };
    if (result_71184[0] != null) { result_71184[0] = (result_71184[0]).concat(cstrToNimstr(((total_71196 - i_71194))+"")); } else { result_71184[0] = cstrToNimstr(((total_71196 - i_71194))+"").slice(); };
    if (result_71184[0] != null) { result_71184[0] = (result_71184[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_71184[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
    }
    
    L6: do {
      var j_71436 = 0;
      var colontmp__206662 = 0;
      colontmp__206662 = (i_71194 - 1);
      var res_206667 = colontmp__206662;
      L7: do {
          L8: while (true) {
          if (!(0 <= res_206667)) break L8;
            j_71436 = res_206667;
            add_65043(result_71184, 0, temp_frames_71203[j_71436].Field0);
            if ((0 < temp_frames_71203[j_71436].Field1)) {
            if (result_71184[0] != null) { result_71184[0] = (result_71184[0]).concat(makeNimstrLit(", line: ")); } else { result_71184[0] = makeNimstrLit(", line: "); };
            if (result_71184[0] != null) { result_71184[0] = (result_71184[0]).concat(cstrToNimstr((temp_frames_71203[j_71436].Field1)+"")); } else { result_71184[0] = cstrToNimstr((temp_frames_71203[j_71436].Field1)+"").slice(); };
            }
            
            if (result_71184[0] != null) { result_71184[0] = (result_71184[0]).concat(makeNimstrLit("\x0A")); } else { result_71184[0] = makeNimstrLit("\x0A"); };
            res_206667 -= 1;
          }
      } while(false);
    } while(false);

  return result_71184[0];

}

function raw_write_stack_trace_71496() {
  var result_71498 = null;

    if (!((framePtr == null))) {
    result_71498 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_71181(framePtr) || []), NTI47014);
    }
    else {
      result_71498 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI47014);
    }
    

  return result_71498;

}

function new_seq_73336(len_73339) {
  var result_73341 = null;

  var F={procname:"newSeq.newSeq",prev:framePtr,filename:"system.nim",line:0};
  framePtr = F;
    F.line = 614;
    result_73341 = new Array(len_73339); for (var i=0;i<len_73339;++i) {result_73341[i]=null;}  framePtr = F.prev;

  return result_73341;

}

function unhandledException(e_71557) {
    var buf_71558 = [[]];
    if (!(((e_71557.message != null ? e_71557.message.length : 0) == 0))) {
    if (buf_71558[0] != null) { buf_71558[0] = (buf_71558[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_71558[0] = makeNimstrLit("Error: unhandled exception: "); };
    if (buf_71558[0] != null) { buf_71558[0] = (buf_71558[0]).concat(e_71557.message); } else { buf_71558[0] = e_71557.message.slice(); };
    }
    else {
    if (buf_71558[0] != null) { buf_71558[0] = (buf_71558[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_71558[0] = makeNimstrLit("Error: unhandled exception"); };
    }
    
    if (buf_71558[0] != null) { buf_71558[0] = (buf_71558[0]).concat(makeNimstrLit(" [")); } else { buf_71558[0] = makeNimstrLit(" ["); };
    add_65043(buf_71558, 0, e_71557.name);
    if (buf_71558[0] != null) { buf_71558[0] = (buf_71558[0]).concat(makeNimstrLit("]\x0A")); } else { buf_71558[0] = makeNimstrLit("]\x0A"); };
    if (buf_71558[0] != null) { buf_71558[0] = (buf_71558[0]).concat(raw_write_stack_trace_71496()); } else { buf_71558[0] = raw_write_stack_trace_71496().slice(); };
    var cbuf_71601 = toJSStr(buf_71558[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_71601);
  }
  else {
    throw cbuf_71601;
  }
  

  
}

function raiseOverflow() {
    var eHEX60gensym72058_72203 = null;
    eHEX60gensym72058_72203 = {m_type: NTI52083, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
    eHEX60gensym72058_72203.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI47014);
    eHEX60gensym72058_72203.parent = null;
    raiseException(eHEX60gensym72058_72203, "OverflowError");

  
}

function is_whitespace_205726(text_205728) {
         return !/[^\s]/.test(text_205728);
  

  
}

function is_whitespace_205743(x_205745) {
    var Tmp1;
    var Tmp2;

  var result_205746 = false;

  var F={procname:"dochack.isWhitespace",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 134;
    if (!(x_205745.nodeName == "#text")) Tmp2 = false; else {      Tmp2 = is_whitespace_205726(x_205745.textContent);    }    if (Tmp2) Tmp1 = true; else {      Tmp1 = (x_205745.nodeName == "#comment");    }    result_205746 = Tmp1;
  framePtr = F.prev;

  return result_205746;

}

function raiseIndexError(i_72655, a_72656, b_72657) {
    var Tmp1;

    var eHEX60gensym72802_73003 = null;
    eHEX60gensym72802_73003 = {m_type: NTI52095, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
    if ((b_72657 < a_72656)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_72655)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_72656)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_72657)+"") || []);
    }
    
    eHEX60gensym72802_73003.message = nimCopy(null, Tmp1, NTI47014);
    eHEX60gensym72802_73003.parent = null;
    raiseException(eHEX60gensym72802_73003, "IndexError");

  
}

function to_toc_205760(x_205762, father_205763) {
                var Tmp5;
            var Tmp6;
            var Tmp7;
            var Tmp8;
      var Tmp15;

  var F={procname:"dochack.toToc",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    if ((x_205762.nodeName == "UL")) {
    F.line = 139;
    var f_205784 = {heading: null, kids: [], sortId: (father_205763.kids != null ? father_205763.kids.length : 0), doSort: false};
    F.line = 140;
    var i_205786 = 0;
    L1: do {
      F.line = 141;
        L2: while (true) {
        if (!(i_205786 < x_205762.childNodes.length)) break L2;
          F.line = 142;
          var nxt_205787 = addInt(i_205786, 1);
          L3: do {
            F.line = 143;
              L4: while (true) {
                if (!(nxt_205787 < x_205762.childNodes.length)) Tmp5 = false; else {                  Tmp5 = is_whitespace_205743(x_205762.childNodes[nxt_205787]);                }              if (!Tmp5) break L4;
                F.line = 144;
                nxt_205787 = addInt(nxt_205787, 1);
              }
          } while(false);
            if (!(nxt_205787 < x_205762.childNodes.length)) Tmp8 = false; else {              Tmp8 = (x_205762.childNodes[i_205786].nodeName == "LI");            }            if (!Tmp8) Tmp7 = false; else {              Tmp7 = (x_205762.childNodes[i_205786].childNodes.length == 1);            }            if (!Tmp7) Tmp6 = false; else {              Tmp6 = (x_205762.childNodes[nxt_205787].nodeName == "UL");            }          if (Tmp6) {
          F.line = 147;
          var e_205814 = {heading: x_205762.childNodes[i_205786].childNodes[0], kids: [], sortId: (f_205784.kids != null ? f_205784.kids.length : 0), doSort: false};
          F.line = 148;
          var it_205815 = x_205762.childNodes[nxt_205787];
          L9: do {
            F.line = 149;
            var j_205823 = 0;
            F.line = 104;
            var colontmp__206642 = 0;
            F.line = 149;
            colontmp__206642 = it_205815.childNodes.length;
            F.line = 106;
            var i_206643 = 0;
            L10: do {
              F.line = 107;
                L11: while (true) {
                if (!(i_206643 < colontmp__206642)) break L11;
                  F.line = 149;
                  j_205823 = i_206643;
                  F.line = 150;
                  to_toc_205760(it_205815.childNodes[j_205823], e_205814);
                  F.line = 109;
                  i_206643 = addInt(i_206643, 1);
                }
            } while(false);
          } while(false);
          F.line = 151;
          if (f_205784.kids != null) { f_205784.kids.push(e_205814); } else { f_205784.kids = [e_205814]; };
          F.line = 152;
          i_205786 = addInt(nxt_205787, 1);
          }
          else {
            F.line = 154;
            to_toc_205760(x_205762.childNodes[i_205786], f_205784);
            F.line = 155;
            i_205786 = addInt(i_205786, 1);
          }
          
        }
    } while(false);
    F.line = 156;
    if (father_205763.kids != null) { father_205763.kids.push(f_205784); } else { father_205763.kids = [f_205784]; };
    }
    else {
    if (is_whitespace_205743(x_205762)) {
    }
    else {
    if ((x_205762.nodeName == "LI")) {
    F.line = 160;
    var idx_205860 = [];
    L12: do {
      F.line = 161;
      var i_205868 = 0;
      F.line = 104;
      var colontmp__206646 = 0;
      F.line = 161;
      colontmp__206646 = x_205762.childNodes.length;
      F.line = 106;
      var i_206647 = 0;
      L13: do {
        F.line = 107;
          L14: while (true) {
          if (!(i_206647 < colontmp__206646)) break L14;
            F.line = 161;
            i_205868 = i_206647;
            if (!(is_whitespace_205743(x_205762.childNodes[i_205868]))) {
            F.line = 162;
            if (idx_205860 != null) { idx_205860.push(i_205868); } else { idx_205860 = [i_205868]; };
            }
            
            F.line = 109;
            i_206647 = addInt(i_206647, 1);
          }
      } while(false);
    } while(false);
      if (!((idx_205860 != null ? idx_205860.length : 0) == 2)) Tmp15 = false; else {        Tmp15 = (x_205762.childNodes[idx_205860[chckIndx(1, 0, (idx_205860 != null ? idx_205860.length : 0)+0-1)-0]].nodeName == "UL");      }    if (Tmp15) {
    F.line = 164;
    var e_205901 = {heading: x_205762.childNodes[idx_205860[chckIndx(0, 0, (idx_205860 != null ? idx_205860.length : 0)+0-1)-0]], kids: [], sortId: (father_205763.kids != null ? father_205763.kids.length : 0), doSort: false};
    F.line = 166;
    var it_205902 = x_205762.childNodes[idx_205860[chckIndx(1, 0, (idx_205860 != null ? idx_205860.length : 0)+0-1)-0]];
    L16: do {
      F.line = 167;
      var j_205910 = 0;
      F.line = 104;
      var colontmp__206651 = 0;
      F.line = 167;
      colontmp__206651 = it_205902.childNodes.length;
      F.line = 106;
      var i_206652 = 0;
      L17: do {
        F.line = 107;
          L18: while (true) {
          if (!(i_206652 < colontmp__206651)) break L18;
            F.line = 167;
            j_205910 = i_206652;
            F.line = 168;
            to_toc_205760(it_205902.childNodes[j_205910], e_205901);
            F.line = 109;
            i_206652 = addInt(i_206652, 1);
          }
      } while(false);
    } while(false);
    F.line = 169;
    if (father_205763.kids != null) { father_205763.kids.push(e_205901); } else { father_205763.kids = [e_205901]; };
    }
    else {
      L19: do {
        F.line = 171;
        var i_205925 = 0;
        F.line = 104;
        var colontmp__206655 = 0;
        F.line = 171;
        colontmp__206655 = x_205762.childNodes.length;
        F.line = 106;
        var i_206656 = 0;
        L20: do {
          F.line = 107;
            L21: while (true) {
            if (!(i_206656 < colontmp__206655)) break L21;
              F.line = 171;
              i_205925 = i_206656;
              F.line = 172;
              to_toc_205760(x_205762.childNodes[i_205925], father_205763);
              F.line = 109;
              i_206656 = addInt(i_206656, 1);
            }
        } while(false);
      } while(false);
    }
    
    }
    else {
      F.line = 174;
    if (father_205763.kids != null) { father_205763.kids.push({heading: x_205762, kids: [], sortId: (father_205763.kids != null ? father_205763.kids.length : 0), doSort: false}); } else { father_205763.kids = [{heading: x_205762, kids: [], sortId: (father_205763.kids != null ? father_205763.kids.length : 0), doSort: false}]; };
    }
    }}
  framePtr = F.prev;

  
}

function extract_items_205339(x_205341, heading_205342, items_205345, items_205345_Idx) {
      var Tmp1;

  var F={procname:"dochack.extractItems",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if ((x_205341 == null)) {
    F.line = 81;
    break BeforeRet;
    }
    
      if (!!((x_205341.heading == null))) Tmp1 = false; else {        Tmp1 = (x_205341.heading.textContent == heading_205342);      }    if (Tmp1) {
    L2: do {
      F.line = 83;
      var i_205374 = 0;
      F.line = 104;
      var colontmp__206683 = 0;
      F.line = 83;
      colontmp__206683 = (x_205341.kids != null ? x_205341.kids.length : 0);
      F.line = 106;
      var i_206684 = 0;
      L3: do {
        F.line = 107;
          L4: while (true) {
          if (!(i_206684 < colontmp__206683)) break L4;
            F.line = 83;
            i_205374 = i_206684;
            F.line = 84;
            if (items_205345[items_205345_Idx] != null) { items_205345[items_205345_Idx].push(x_205341.kids[chckIndx(i_205374, 0, (x_205341.kids != null ? x_205341.kids.length : 0)+0-1)-0].heading); } else { items_205345[items_205345_Idx] = [x_205341.kids[chckIndx(i_205374, 0, (x_205341.kids != null ? x_205341.kids.length : 0)+0-1)-0].heading]; };
            F.line = 109;
            i_206684 = addInt(i_206684, 1);
          }
      } while(false);
    } while(false);
    }
    else {
      L5: do {
        F.line = 86;
        var i_205394 = 0;
        F.line = 104;
        var colontmp__206687 = 0;
        F.line = 86;
        colontmp__206687 = (x_205341.kids != null ? x_205341.kids.length : 0);
        F.line = 106;
        var i_206688 = 0;
        L6: do {
          F.line = 107;
            L7: while (true) {
            if (!(i_206688 < colontmp__206687)) break L7;
              F.line = 86;
              i_205394 = i_206688;
              F.line = 87;
              var it_205395 = x_205341.kids[chckIndx(i_205394, 0, (x_205341.kids != null ? x_205341.kids.length : 0)+0-1)-0];
              F.line = 88;
              extract_items_205339(it_205395, heading_205342, items_205345, items_205345_Idx);
              F.line = 109;
              i_206688 = addInt(i_206688, 1);
            }
        } while(false);
      } while(false);
    }
    
  } while (false);
  framePtr = F.prev;

  
}

function tree_205020(tag_205022, kids_205024) {
  var result_205025 = null;

  var F={procname:"dochack.tree",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 11;
    result_205025 = document.createElement(toJSStr(tag_205022));
    L1: do {
      F.line = 12;
      var k_205056 = null;
      F.line = 3;
      var i_206704 = 0;
      L2: do {
        F.line = 4;
          L3: while (true) {
          if (!(i_206704 < (kids_205024 != null ? kids_205024.length : 0))) break L3;
            F.line = 12;
            k_205056 = kids_205024[chckIndx(i_206704, 0, (kids_205024 != null ? kids_205024.length : 0)+0-1)-0];
            F.line = 13;
            result_205025.appendChild(k_205056);
            F.line = 6;
            i_206704 = addInt(i_206704, 1);
          }
      } while(false);
    } while(false);
  framePtr = F.prev;

  return result_205025;

}

function text_205152(s_205154) {
  var result_205155 = null;

  var F={procname:"dochack.text",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 27;
    result_205155 = document.createTextNode(s_205154);
  framePtr = F.prev;

  return result_205155;

}

function sys_fatal_61662(message_61666) {
  var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"fatal.nim",line:0};
  framePtr = F;
    F.line = 50;
    var e_61803 = null;
    F.line = 53;
    e_61803 = {m_type: NTI52087, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
    F.line = 54;
    e_61803.message = nimCopy(null, message_61666, NTI47014);
    F.line = 55;
    raiseException(e_61803, "AssertionError");
  framePtr = F.prev;

  
}

function raise_assert_61658(msg_61660) {
  var F={procname:"assertions.raiseAssert",prev:framePtr,filename:"assertions.nim",line:0};
  framePtr = F;
    F.line = 20;
    sys_fatal_61662(msg_61660);
  framePtr = F.prev;

  
}

function failed_assert_impl_61866(msg_61868) {
  var F={procname:"assertions.failedAssertImpl",prev:framePtr,filename:"assertions.nim",line:0};
  framePtr = F;
    F.line = 27;
    raise_assert_61658(msg_61868);
  framePtr = F.prev;

  
}

function uncovered_206052(x_206054) {
      var Tmp1;
    var Tmp2;

  var result_206055 = null;

  var F={procname:"dochack.uncovered",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
  BeforeRet: do {
      if (!((x_206054.kids != null ? x_206054.kids.length : 0) == 0)) Tmp1 = false; else {        Tmp1 = !((x_206054.heading == null));      }    if (Tmp1) {
    F.line = 194;
    if (!(x_206054.heading.hasOwnProperty('__karaxMarker__'))) {
    Tmp2 = x_206054;
    }
    else {
    Tmp2 = null;
    }
    
    result_206055 = Tmp2;
    break BeforeRet;
    }
    
    F.line = 195;
    result_206055 = {heading: x_206054.heading, kids: [], sortId: x_206054.sortId, doSort: x_206054.doSort};
    L3: do {
      F.line = 197;
      var i_206096 = 0;
      F.line = 104;
      var colontmp__206715 = 0;
      F.line = 197;
      colontmp__206715 = (x_206054.kids != null ? x_206054.kids.length : 0);
      F.line = 106;
      var i_206716 = 0;
      L4: do {
        F.line = 107;
          L5: while (true) {
          if (!(i_206716 < colontmp__206715)) break L5;
            F.line = 197;
            i_206096 = i_206716;
            F.line = 198;
            var y_206097 = uncovered_206052(x_206054.kids[chckIndx(i_206096, 0, (x_206054.kids != null ? x_206054.kids.length : 0)+0-1)-0]);
            if (!((y_206097 == null))) {
            F.line = 199;
            if (result_206055.kids != null) { result_206055.kids.push(y_206097); } else { result_206055.kids = [y_206097]; };
            }
            
            F.line = 109;
            i_206716 = addInt(i_206716, 1);
          }
      } while(false);
    } while(false);
    if (((result_206055.kids != null ? result_206055.kids.length : 0) == 0)) {
    F.line = 200;
    result_206055 = null;
    }
    
  } while (false);
  framePtr = F.prev;

  return result_206055;

}

function merge_tocs_206131(orig_206133, news_206134) {
  var result_206135 = null;

  var F={procname:"dochack.mergeTocs",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 203;
    result_206135 = uncovered_206052(orig_206133);
    if ((result_206135 == null)) {
    F.line = 205;
    result_206135 = news_206134;
    }
    else {
      L1: do {
        F.line = 207;
        var i_206156 = 0;
        F.line = 104;
        var colontmp__206710 = 0;
        F.line = 207;
        colontmp__206710 = (news_206134.kids != null ? news_206134.kids.length : 0);
        F.line = 106;
        var i_206711 = 0;
        L2: do {
          F.line = 107;
            L3: while (true) {
            if (!(i_206711 < colontmp__206710)) break L3;
              F.line = 207;
              i_206156 = i_206711;
              F.line = 208;
              if (result_206135.kids != null) { result_206135.kids.push(news_206134.kids[chckIndx(i_206156, 0, (news_206134.kids != null ? news_206134.kids.length : 0)+0-1)-0]); } else { result_206135.kids = [news_206134.kids[chckIndx(i_206156, 0, (news_206134.kids != null ? news_206134.kids.length : 0)+0-1)-0]]; };
              F.line = 109;
              i_206711 = addInt(i_206711, 1);
            }
        } while(false);
      } while(false);
    }
    
  framePtr = F.prev;

  return result_206135;

}

function build_toc_206177(orig_206179, types_206181, procs_206182) {
  var result_206183 = null;

  var F={procname:"dochack.buildToc",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 211;
    var new_stuff_206199 = {heading: null, kids: [], doSort: true, sortId: 0};
    L1: do {
      F.line = 212;
      var t_206414 = null;
      F.line = 184;
      var i_206699 = 0;
      F.line = 185;
      var l_206700 = (types_206181 != null ? types_206181.length : 0);
      L2: do {
        F.line = 186;
          L3: while (true) {
          if (!(i_206699 < l_206700)) break L3;
            F.line = 212;
            t_206414 = types_206181[chckIndx(i_206699, 0, (types_206181 != null ? types_206181.length : 0)+0-1)-0];
            F.line = 213;
            var c_206430 = {heading: t_206414.cloneNode(true), kids: [], doSort: true, sortId: 0};
            F.line = 214;
            t_206414.__karaxMarker__ = true;
            L4: do {
              F.line = 215;
              var p_206437 = null;
              F.line = 184;
              var i_206696 = 0;
              F.line = 185;
              var l_206697 = (procs_206182 != null ? procs_206182.length : 0);
              L5: do {
                F.line = 186;
                  L6: while (true) {
                  if (!(i_206696 < l_206697)) break L6;
                    F.line = 215;
                    p_206437 = procs_206182[chckIndx(i_206696, 0, (procs_206182 != null ? procs_206182.length : 0)+0-1)-0];
                    if (!(p_206437.hasOwnProperty('__karaxMarker__'))) {
                    F.line = 217;
                    var xx_206438 = p_206437.parentNode.getElementsByClassName("attachedType");
                    if ((((xx_206438 != null ? xx_206438.length : 0) == 1) && (xx_206438[chckIndx(0, 0, (xx_206438 != null ? xx_206438.length : 0)+0-1)-0].textContent == t_206414.textContent))) {
                    F.line = 220;
                    var q_206446 = tree_205020(makeNimstrLit("A"), [text_205152(p_206437.title)]);
                    F.line = 221;
                    q_206446.setAttribute("href", p_206437.getAttribute("href"));
                    F.line = 222;
                    if (c_206430.kids != null) { c_206430.kids.push({heading: q_206446, kids: [], sortId: 0, doSort: false}); } else { c_206430.kids = [{heading: q_206446, kids: [], sortId: 0, doSort: false}]; };
                    F.line = 223;
                    p_206437.__karaxMarker__ = true;
                    }
                    
                    }
                    
                    F.line = 188;
                    i_206696 = addInt(i_206696, 1);
                    if (!(((procs_206182 != null ? procs_206182.length : 0) == l_206697))) {
                    F.line = 189;
                    failed_assert_impl_61866(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system/iterators.nim(189, 11) `len(a) ==\x0A    L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            F.line = 224;
            if (new_stuff_206199.kids != null) { new_stuff_206199.kids.push(c_206430); } else { new_stuff_206199.kids = [c_206430]; };
            F.line = 188;
            i_206699 = addInt(i_206699, 1);
            if (!(((types_206181 != null ? types_206181.length : 0) == l_206700))) {
            F.line = 189;
            failed_assert_impl_61866(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system/iterators.nim(189, 11) `len(a) ==\x0A    L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    F.line = 225;
    result_206183 = merge_tocs_206131(orig_206179, new_stuff_206199);
  framePtr = F.prev;

  return result_206183;

}

function add_205100(parent_205102, kid_205103) {
      var Tmp1;
        var Tmp2;

  var F={procname:"dochack.add",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
      if (!(parent_205102.nodeName == "TR")) Tmp1 = false; else {        if ((kid_205103.nodeName == "TD")) Tmp2 = true; else {          Tmp2 = (kid_205103.nodeName == "TH");        }        Tmp1 = Tmp2;      }    if (Tmp1) {
    F.line = 18;
    var k_205104 = document.createElement("TD");
    F.line = 19;
    k_205104.appendChild(kid_205103);
    F.line = 20;
    parent_205102.appendChild(k_205104);
    }
    else {
      F.line = 22;
    parent_205102.appendChild(kid_205103);
    }
    
  framePtr = F.prev;

  
}

function set_class_205118(e_205120, value_205121) {
  var F={procname:"dochack.setClass",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 25;
    e_205120.setAttribute("class", toJSStr(value_205121));
  framePtr = F.prev;

  
}

function to_html_205424(x_205426, is_root_205427) {
      var Tmp1;

    function HEX3Aanonymous_205467(a_205469, b_205470) {
          var Tmp1;

      var result_205471 = 0;

      var F={procname:"toHtml.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
      framePtr = F;
      BeforeRet: do {
          if (!!((a_205469.heading == null))) Tmp1 = false; else {            Tmp1 = !((b_205470.heading == null));          }        if (Tmp1) {
        F.line = 106;
        var x_205488 = a_205469.heading.textContent;
        F.line = 107;
        var y_205489 = b_205470.heading.textContent;
        if ((x_205488 < y_205489)) {
        F.line = 108;
        result_205471 = -1;
        break BeforeRet;
        }
        
        if ((y_205489 < x_205488)) {
        F.line = 109;
        result_205471 = 1;
        break BeforeRet;
        }
        
        F.line = 110;
        result_205471 = 0;
        break BeforeRet;
        }
        else {
          F.line = 113;
          result_205471 = subInt(a_205469.sortId, b_205470.sortId);
          break BeforeRet;
        }
        
      } while (false);
      framePtr = F.prev;

      return result_205471;

    }

  var result_205428 = null;

  var F={procname:"dochack.toHtml",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
  BeforeRet: do {
    if ((x_205426 == null)) {
    F.line = 91;
    result_205428 = null;
    break BeforeRet;
    }
    
    if (((x_205426.kids != null ? x_205426.kids.length : 0) == 0)) {
    if ((x_205426.heading == null)) {
    F.line = 93;
    result_205428 = null;
    break BeforeRet;
    }
    
    F.line = 94;
    result_205428 = x_205426.heading.cloneNode(true);
    break BeforeRet;
    }
    
    F.line = 95;
    result_205428 = tree_205020(makeNimstrLit("DIV"), []);
      if (!!((x_205426.heading == null))) Tmp1 = false; else {        Tmp1 = !(x_205426.heading.hasOwnProperty('__karaxMarker__'));      }    if (Tmp1) {
    F.line = 97;
    add_205100(result_205428, x_205426.heading.cloneNode(true));
    }
    
    F.line = 98;
    var ul_205464 = tree_205020(makeNimstrLit("UL"), []);
    if (is_root_205427) {
    F.line = 100;
    set_class_205118(ul_205464, makeNimstrLit("simple simple-toc"));
    }
    else {
      F.line = 102;
    set_class_205118(ul_205464, makeNimstrLit("simple"));
    }
    
    if (x_205426.doSort) {
    F.line = 104;
    x_205426.kids.sort(HEX3Aanonymous_205467);
    }
    
    L2: do {
      F.line = 115;
      var k_205614 = null;
      F.line = 182;
      var colontmp__206721 = null;
      F.line = 115;
      colontmp__206721 = x_205426.kids;
      F.line = 184;
      var i_206723 = 0;
      F.line = 185;
      var l_206724 = (colontmp__206721 != null ? colontmp__206721.length : 0);
      L3: do {
        F.line = 186;
          L4: while (true) {
          if (!(i_206723 < l_206724)) break L4;
            F.line = 115;
            k_205614 = colontmp__206721[chckIndx(i_206723, 0, (colontmp__206721 != null ? colontmp__206721.length : 0)+0-1)-0];
            F.line = 116;
            var y_205615 = to_html_205424(k_205614, false);
            if (!((y_205615 == null))) {
            F.line = 118;
            add_205100(ul_205464, tree_205020(makeNimstrLit("LI"), [y_205615]));
            }
            
            F.line = 188;
            i_206723 = addInt(i_206723, 1);
            if (!(((colontmp__206721 != null ? colontmp__206721.length : 0) == l_206724))) {
            F.line = 189;
            failed_assert_impl_61866(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system/iterators.nim(189, 11) `len(a) ==\x0A    L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (!((ul_205464.childNodes.length == 0))) {
    F.line = 119;
    add_205100(result_205428, ul_205464);
    }
    
    if ((result_205428.childNodes.length == 0)) {
    F.line = 120;
    result_205428 = null;
    }
    
  } while (false);
  framePtr = F.prev;

  return result_205428;

}

function replace_by_id_205172(id_205174, new_tree_205175) {
  var F={procname:"dochack.replaceById",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 32;
    var x_205176 = document.getElementById(id_205174);
    F.line = 33;
    x_205176.parentNode.replaceChild(new_tree_205175, x_205176);
    F.line = 34;
    new_tree_205175.id = id_205174;
  framePtr = F.prev;

  
}

function togglevis_206533(d_206535) {
  var F={procname:"dochack.togglevis",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 230;
        if (d_206535.style.display == 'none')
      d_206535.style.display = 'inline';
    else
      d_206535.style.display = 'none';
  
  framePtr = F.prev;

  
}

function groupBy(value_206551) {
  var F={procname:"dochack.groupBy",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 238;
    var toc_206552 = document.getElementById("toc-list");
    if ((alternative_206519[0] == null)) {
    F.line = 240;
    var tt_206573 = {heading: null, kids: [], sortId: 0, doSort: false};
    F.line = 241;
    to_toc_205760(toc_206552, tt_206573);
    F.line = 242;
    tt_206573 = tt_206573.kids[chckIndx(0, 0, (tt_206573.kids != null ? tt_206573.kids.length : 0)+0-1)-0];
    F.line = 244;
    var types_206590 = [[]];
    F.line = 245;
    var procs_206607 = [[]];
    F.line = 247;
    extract_items_205339(tt_206573, "Types", types_206590, 0);
    F.line = 248;
    extract_items_205339(tt_206573, "Procs", procs_206607, 0);
    F.line = 249;
    extract_items_205339(tt_206573, "Converters", procs_206607, 0);
    F.line = 250;
    extract_items_205339(tt_206573, "Methods", procs_206607, 0);
    F.line = 251;
    extract_items_205339(tt_206573, "Templates", procs_206607, 0);
    F.line = 252;
    extract_items_205339(tt_206573, "Macros", procs_206607, 0);
    F.line = 253;
    extract_items_205339(tt_206573, "Iterators", procs_206607, 0);
    F.line = 255;
    var ntoc_206615 = build_toc_206177(tt_206573, types_206590[0], procs_206607[0]);
    F.line = 256;
    var x_206616 = to_html_205424(ntoc_206615, true);
    F.line = 257;
    alternative_206519[0] = tree_205020(makeNimstrLit("DIV"), [x_206616]);
    }
    
    if ((value_206551 == "type")) {
    F.line = 259;
    replace_by_id_205172("tocRoot", alternative_206519[0]);
    }
    else {
      F.line = 261;
    replace_by_id_205172("tocRoot", tree_205020(makeNimstrLit("DIV"), []));
    }
    
    F.line = 262;
    togglevis_206533(document.getElementById("toc-list"));
  framePtr = F.prev;

  
}
var db_206727 = [null];
var contents_206729 = [null];
var oldtoc_207203 = [null];
var timer_207204 = [null];

function raiseRangeError() {
    var eHEX60gensym72457_72603 = null;
    eHEX60gensym72457_72603 = {m_type: NTI52099, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
    eHEX60gensym72457_72603.message = nimCopy(null, makeNimstrLit("value out of range"), NTI47014);
    eHEX60gensym72457_72603.parent = null;
    raiseException(eHEX60gensym72457_72603, "RangeError");

  
}

function nsuToLowerAsciiChar(c_194184) {
  var result_194185 = 0;

  var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"strutils.nim",line:0};
  framePtr = F;
    if ((ConstSet2[c_194184] != undefined)) {
    F.line = 209;
    result_194185 = chckRange(addInt(c_194184, 32), 0, 255);
    }
    else {
      F.line = 211;
      result_194185 = c_194184;
    }
    
  framePtr = F.prev;

  return result_194185;

}

function fuzzy_match_204054(pattern_204056, str_204057) {
              var Tmp4;
              var Tmp5;
                var Tmp6;

  var result_204061 = {Field0: 0, Field1: false};

  var F={procname:"fuzzysearch.fuzzyMatch",prev:framePtr,filename:"fuzzysearch.nim",line:0};
  framePtr = F;
    F.line = 36;
    var score_state_204062 = -100;
    F.line = 37;
    var header_matched_204063 = false;
    F.line = 38;
    var unmatched_leading_char_count_204065 = 0;
    F.line = 39;
    var consecutive_match_count_204067 = 0;
    F.line = 40;
    var str_index_204069 = 0;
    F.line = 41;
    var pat_index_204071 = 0;
    F.line = 42;
    var score_204073 = 0;
    L1: do {
      F.line = 48;
        L2: while (true) {
        if (!((str_index_204069 < (str_204057 != null ? str_204057.length : 0)) && (pat_index_204071 < (pattern_204056 != null ? pattern_204056.length : 0)))) break L2;
          L3: do {
            F.line = 50;
            var pattern_char_204079 = nsuToLowerAsciiChar(pattern_204056.charCodeAt(chckIndx(pat_index_204071, 0, (pattern_204056 != null ? pattern_204056.length : 0)+0-1)-0));
            F.line = 51;
            var str_char_204080 = nsuToLowerAsciiChar(str_204057.charCodeAt(chckIndx(str_index_204069, 0, (str_204057 != null ? str_204057.length : 0)+0-1)-0));
            if ((ConstSet3[pattern_char_204079] != undefined)) {
            F.line = 55;
            pat_index_204071 = addInt(pat_index_204071, 1);
            F.line = 56;
            break L3;
            }
            
            if ((ConstSet4[str_char_204080] != undefined)) {
            F.line = 58;
            str_index_204069 = addInt(str_index_204069, 1);
            F.line = 59;
            break L3;
            }
            
            if ((!(header_matched_204063) && (str_char_204080 == 58))) {
            F.line = 64;
            header_matched_204063 = true;
            F.line = 65;
            score_state_204062 = -100;
            F.line = 66;
            score_204073 = ((Math.floor((5.0000000000000000e-01 * score_204073)))|0);
            F.line = 67;
            pat_index_204071 = 0;
            F.line = 68;
            str_index_204069 = addInt(str_index_204069, 1);
            F.line = 69;
            break L3;
            }
            
            if ((str_char_204080 == pattern_char_204079)) {
            F.line = 72;
            switch (score_state_204062) {
            case -100:
            case 20:
              F.line = 74;
              score_state_204062 = 10;
              break;
            case 0:
              F.line = 77;
              score_state_204062 = 5;
              F.line = 77;
              score_204073 = addInt(score_204073, score_state_204062);
              break;
            case 10:
            case 5:
              F.line = 80;
              consecutive_match_count_204067 = addInt(consecutive_match_count_204067, 1);
              F.line = 81;
              score_state_204062 = 5;
              F.line = 82;
              score_204073 = addInt(score_204073, mulInt(5, consecutive_match_count_204067));
              if ((score_state_204062 == 10)) {
              F.line = 85;
              score_204073 = addInt(score_204073, 10);
              }
              
              F.line = 87;
              var on_boundary_204154 = (pat_index_204071 == (pattern_204056 != null ? (pattern_204056.length-1) : -1));
              if ((!(on_boundary_204154) && (str_index_204069 < (str_204057 != null ? (str_204057.length-1) : -1)))) {
              F.line = 90;
              var next_pattern_char_204155 = nsuToLowerAsciiChar(pattern_204056.charCodeAt(chckIndx(addInt(pat_index_204071, 1), 0, (pattern_204056 != null ? pattern_204056.length : 0)+0-1)-0));
              F.line = 91;
              var next_str_char_204156 = nsuToLowerAsciiChar(str_204057.charCodeAt(chckIndx(addInt(str_index_204069, 1), 0, (str_204057 != null ? str_204057.length : 0)+0-1)-0));
              F.line = 94;
              if (!!((ConstSet5[next_str_char_204156] != undefined))) Tmp4 = false; else {                Tmp4 = !((next_str_char_204156 == next_pattern_char_204155));              }              on_boundary_204154 = Tmp4;
              }
              
              if (on_boundary_204154) {
              F.line = 99;
              score_state_204062 = 20;
              F.line = 99;
              score_204073 = addInt(score_204073, score_state_204062);
              }
              
              break;
            case -1:
            case -3:
              F.line = 102;
              if (!((ConstSet6[str_204057.charCodeAt(chckIndx(subInt(str_index_204069, 1), 0, (str_204057 != null ? str_204057.length : 0)+0-1)-0)] != undefined))) Tmp5 = true; else {                if (!(ConstSet7[str_204057.charCodeAt(chckIndx(subInt(str_index_204069, 1), 0, (str_204057 != null ? str_204057.length : 0)+0-1)-0)] != undefined)) Tmp6 = false; else {                  Tmp6 = (ConstSet8[str_204057.charCodeAt(chckIndx(str_index_204069, 0, (str_204057 != null ? str_204057.length : 0)+0-1)-0)] != undefined);                }                Tmp5 = Tmp6;              }              var is_leading_char_204194 = Tmp5;
              if (is_leading_char_204194) {
              F.line = 109;
              score_state_204062 = 10;
              }
              else {
                F.line = 113;
                score_state_204062 = 0;
                F.line = 113;
                score_204073 = addInt(score_204073, score_state_204062);
              }
              
              break;
            }
            F.line = 114;
            pat_index_204071 = addInt(pat_index_204071, 1);
            }
            else {
              F.line = 117;
              switch (score_state_204062) {
              case -100:
                F.line = 119;
                score_state_204062 = -3;
                F.line = 119;
                score_204073 = addInt(score_204073, score_state_204062);
                break;
              case 5:
                F.line = 122;
                score_state_204062 = -1;
                F.line = 122;
                score_204073 = addInt(score_204073, score_state_204062);
                F.line = 123;
                consecutive_match_count_204067 = 0;
                break;
              case -3:
                if ((unmatched_leading_char_count_204065 < 3)) {
                F.line = 127;
                score_state_204062 = -3;
                F.line = 127;
                score_204073 = addInt(score_204073, score_state_204062);
                }
                
                F.line = 128;
                unmatched_leading_char_count_204065 = addInt(unmatched_leading_char_count_204065, 1);
                break;
              default: 
                F.line = 131;
                score_state_204062 = -1;
                F.line = 131;
                score_204073 = addInt(score_204073, score_state_204062);
                break;
              }
            }
            
            F.line = 133;
            str_index_204069 = addInt(str_index_204069, 1);
          } while(false);
        }
    } while(false);
    F.line = 136;
    var colontmp__207322 = nimMax(0, score_204073);
    F.line = 137;
    var colontmp__207323 = (0 < score_204073);
    F.line = 135;
    nimCopy(result_204061, {Field0: colontmp__207322, Field1: colontmp__207323}, NTI204058);
  framePtr = F.prev;

  return result_204061;

}

function text_205135(s_205137) {
  var result_205138 = null;

  var F={procname:"dochack.text",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    F.line = 26;
    result_205138 = document.createTextNode(toJSStr(s_205137));
  framePtr = F.prev;

  return result_205138;

}

function dosearch_206746(value_206748) {

    function HEX3Aanonymous_207073(a_207082, b_207083) {
      var result_207087 = 0;

      var F={procname:"dosearch.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
      framePtr = F;
        F.line = 305;
        result_207087 = subInt(b_207083["Field1"], a_207082["Field1"]);
      framePtr = F.prev;

      return result_207087;

    }

  var result_206749 = null;

  var F={procname:"dochack.dosearch",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    if (((db_206727[0] != null ? db_206727[0].length : 0) == 0)) {
    F.line = 272;
    var stuff_206755 = null;
    F.line = 273;
        var request = new XMLHttpRequest();
    request.open("GET", "theindex.html", false);
    request.send(null);

    var doc = document.implementation.createHTMLDocument("theindex");
    doc.documentElement.innerHTML = request.responseText;

    //parser=new DOMParser();
    //doc=parser.parseFromString("<html></html>", "text/html");

    stuff_206755 = doc.documentElement;
    
    F.line = 286;
    db_206727[0] = nimCopy(null, stuff_206755.getElementsByClassName("reference"), NTI94305);
    F.line = 287;
    contents_206729[0] = nimCopy(null, [], NTI206770);
    L1: do {
      F.line = 288;
      var ahref_207014 = null;
      F.line = 184;
      var i_207302 = 0;
      F.line = 185;
      var l_207303 = (db_206727[0] != null ? db_206727[0].length : 0);
      L2: do {
        F.line = 186;
          L3: while (true) {
          if (!(i_207302 < l_207303)) break L3;
            F.line = 288;
            ahref_207014 = db_206727[0][chckIndx(i_207302, 0, (db_206727[0] != null ? db_206727[0].length : 0)+0-1)-0];
            F.line = 289;
            if (contents_206729[0] != null) { contents_206729[0].push(ahref_207014.getAttribute("data-doc-search-tag")); } else { contents_206729[0] = [ahref_207014.getAttribute("data-doc-search-tag")]; };
            F.line = 188;
            i_207302 = addInt(i_207302, 1);
            if (!(((db_206727[0] != null ? db_206727[0].length : 0) == l_207303))) {
            F.line = 189;
            failed_assert_impl_61866(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system/iterators.nim(189, 11) `len(a) ==\x0A    L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    }
    
    F.line = 290;
    var ul_207025 = tree_205020(makeNimstrLit("UL"), []);
    F.line = 291;
    result_206749 = tree_205020(makeNimstrLit("DIV"), []);
    F.line = 292;
    set_class_205118(result_206749, makeNimstrLit("search_results"));
    F.line = 293;
    var matches_207046 = [];
    L4: do {
      F.line = 294;
      var i_207059 = 0;
      F.line = 104;
      var colontmp__207309 = 0;
      F.line = 294;
      colontmp__207309 = (db_206727[0] != null ? db_206727[0].length : 0);
      F.line = 106;
      var i_207310 = 0;
      L5: do {
        F.line = 107;
          L6: while (true) {
          if (!(i_207310 < colontmp__207309)) break L6;
            F.line = 294;
            i_207059 = i_207310;
            L7: do {
              F.line = 295;
              var c_207060 = contents_206729[0][chckIndx(i_207059, 0, (contents_206729[0] != null ? contents_206729[0].length : 0)+0-1)-0];
              if (((c_207060 == "Examples") || (c_207060 == "PEG construction"))) {
              F.line = 300;
              break L7;
              }
              
              F.line = 301;
              var colontmp__207317 = fuzzy_match_204054(value_206748, c_207060);
              F.line = 301;
              var score_207061 = 0;
              F.line = 301;
              var matched_207062 = false;
              F.line = 301;
              score_207061 = colontmp__207317["Field0"];
              F.line = 301;
              matched_207062 = colontmp__207317["Field1"];
              if (matched_207062) {
              F.line = 303;
              if (matches_207046 != null) { matches_207046.push({Field0: db_206727[0][chckIndx(i_207059, 0, (db_206727[0] != null ? db_206727[0].length : 0)+0-1)-0], Field1: score_207061}); } else { matches_207046 = [{Field0: db_206727[0][chckIndx(i_207059, 0, (db_206727[0] != null ? db_206727[0].length : 0)+0-1)-0], Field1: score_207061}]; };
              }
              
            } while(false);
            F.line = 109;
            i_207310 = addInt(i_207310, 1);
          }
      } while(false);
    } while(false);
    F.line = 305;
    matches_207046.sort(HEX3Aanonymous_207073);
    L8: do {
      F.line = 306;
      var i_207126 = 0;
      F.line = 104;
      var colontmp__207314 = 0;
      F.line = 306;
      colontmp__207314 = nimMin((matches_207046 != null ? matches_207046.length : 0), 19);
      F.line = 106;
      var i_207315 = 0;
      L9: do {
        F.line = 107;
          L10: while (true) {
          if (!(i_207315 < colontmp__207314)) break L10;
            F.line = 306;
            i_207126 = i_207315;
            F.line = 307;
            matches_207046[chckIndx(i_207126, 0, (matches_207046 != null ? matches_207046.length : 0)+0-1)-0]["Field0"].innerHTML = matches_207046[chckIndx(i_207126, 0, (matches_207046 != null ? matches_207046.length : 0)+0-1)-0]["Field0"].getAttribute("data-doc-search-tag");
            F.line = 308;
            add_205100(ul_207025, tree_205020(makeNimstrLit("LI"), [matches_207046[chckIndx(i_207126, 0, (matches_207046 != null ? matches_207046.length : 0)+0-1)-0]["Field0"]]));
            F.line = 109;
            i_207315 = addInt(i_207315, 1);
          }
      } while(false);
    } while(false);
    if ((ul_207025.childNodes.length == 0)) {
    F.line = 310;
    add_205100(result_206749, tree_205020(makeNimstrLit("B"), [text_205135(makeNimstrLit("no search results"))]));
    }
    else {
      F.line = 312;
      add_205100(result_206749, tree_205020(makeNimstrLit("B"), [text_205135(makeNimstrLit("search results"))]));
      F.line = 313;
      add_205100(result_206749, ul_207025);
    }
    
  framePtr = F.prev;

  return result_206749;

}

function search() {

    function wrapper_207235() {
      var F={procname:"search.wrapper",prev:framePtr,filename:"dochack.nim",line:0};
      framePtr = F;
        F.line = 320;
        var elem_207237 = document.getElementById("searchInput");
        F.line = 321;
        var value_207238 = elem_207237.value;
        if (!(((value_207238 != null ? value_207238.length : 0) == 0))) {
        if ((oldtoc_207203[0] == null)) {
        F.line = 324;
        oldtoc_207203[0] = document.getElementById("tocRoot");
        }
        
        F.line = 325;
        var results_207244 = dosearch_206746(value_207238);
        F.line = 326;
        replace_by_id_205172("tocRoot", results_207244);
        }
        else {
        if (!((oldtoc_207203[0] == null))) {
        F.line = 328;
        replace_by_id_205172("tocRoot", oldtoc_207203[0]);
        }
        }
      framePtr = F.prev;

      
    }

  var F={procname:"dochack.search",prev:framePtr,filename:"dochack.nim",line:0};
  framePtr = F;
    if (!((timer_207204[0] == null))) {
    F.line = 330;
    clearTimeout(timer_207204[0]);
    }
    
    F.line = 331;
    timer_207204[0] = setTimeout(wrapper_207235, 400);
  framePtr = F.prev;

  
}
